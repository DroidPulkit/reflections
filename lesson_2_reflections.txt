What happens when you initialize a repository? Why do you need to do it?

When we initialize a respository we see that it has created a new respository in the current directory
and we see it added .git to that directory.
We need to do this cause then only it will be called git respository or else it will be same as normal directory

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is different as here we can preapare what files to commit together 

How can you use the staging area to make sure you have one commit per logical change?

We can use git diff to find the logical changes made by us spanning in multiple files
we can prepare which files to commit together and which not

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branching would help in doing some experimental features or working in a group
where each user can add any number of changes or features to it and expect that it merges in 
main branch

How do the diagrams help you visualize the branch structure?

It helps as we know which commit has a parent and which commit will show in git log 
It's command is git log --graph --oneline

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

By merging two branches we add and delete some codes to final commit which the git automatically does
and then it create a new commit where all the codes are integreated.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Git is multi talented it can merge automatically as well as if some merge conflict occurs it let us do the
mergeing manually then it adds >>>>>>>>>>>>>> <<<<<<<<<<<<<<<<< lines to file to show the conflict